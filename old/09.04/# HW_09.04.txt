Проект 1: работа со структурами данных

  ==========  1  ==========

Актуализировать документ Архитектура, оставив в вашей версии документа только те структуры данных, которые вы будете непосредственно реализовывать.

Удалить файл options.ini. Создать нужный(-ые) .ini файл(-ы) с тестовыми данными, структурированными по одному выбранному вами варианту.



  ==========  2  ==========

Добавить в проект файл game.py

В этом файле реализовать функцию show_field(turns) -> None:

    вход: объект с данными о сделанных ходах 
    возврат: str - содержащий псевдографическое изображение игрового поля со сделанными ходами
    stdout: None

Вручную создайте и используйте для тестирования объект с данными о нескольких сделанных ходах.

Пример того, как может выглядеть игровое поле:
(можно использовать эти или другие символы)

    O |   |   
   ———————————
    O | X |   
   ———————————
    X | O | X



  ==========  3  ==========

В файле game.py реализовать функцию check_win(turns) -> bool:

    вход: объект с данными о сделанных ходах 
    возврат: bool - есть ли на поле победная комбинация (столбец/строка/диагональ целиком заполненная одним символом)
    stdout: None



  =========================

Все задания по проекту выполняются в локальном репозитории проекта и загружаются в свой удалённый репозиторий проекта.

В текущий репозиторий помещается TXT файл со ссылкой на репозиторий проекта.

В сервис Журнал отправляется сообщение о выполнении задания со ссылкой на репозиторий проекта.

Функции обязательно документируются.
Параметры функций обязательно аннотируются.

Преподаватель пишет комментарии и правки в коде проекта и обновляет файлы в удалённом репозитории.
Проверяйте обновления в своём репозитории каждый день.