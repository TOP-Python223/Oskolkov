Стандартная библиотека: collections, array, fractions, decimal, math, string

  ==========  1  ==========

Используя модули fractions и math напишите функцию, визуализирующую в консоли отрезок числовой оси с размещёнными на ней рациональными числами.

Функция принимает на вход кортеж с объектами Fraction в диапазоне от 0 до 1 (обе границы не включены).
Функция должна вывести в стандартный поток вывода stdout отрезок, как на примерах ниже. На отрезке в масштабе должны быть расположены риски переданных рациональных чисел с подписями.


Подсказка 1: отображаемая длина отрезка зависит от номинала единичного отрезка; для получения единичного отрезка оси вам потребуется нахождение НОК (наименьшего общего кратного).

Подсказка 2: чередуйте подписи к числам сверху и снизу оси, чтобы минимизировать наложение подписей.

Подсказка 3: вероятнее всего, вам потребуются свои дополнительные функции – это нормально, не старайтесь уместить весь код в одну функцию.


Пример ввода 1:

    1/2

Пример вывода 1:

     1/2
    |—|—|
    0   1


Пример ввода 2:

    1/2 1/3 1/4

Пример вывода 2:

         1/4   1/2
    |—————|—|———|———————————|
    0      1/3              1



  ==========  2  ==========

Вам необходимо написать скрипт обработчик некоего потокового буфера данных, в который поступают пакеты из различных источников. Ваш скрипт должен выступать в роли парсера и распределителя.

То есть задача программы заключается в анализе формата входных пакетов данных, преобразовании их при необходимости и перенаправлении выходных пакетов в соответствующие потоки.

В этой задаче роль буфера, содержащего входные пакеты, будет играть текстовый файл (обычная ситуация в *nix системах) 'buffer.txt'. В файле содержатся данные разных типов, разделённые точкой с запятой.

Роль потоков будут играть именованные кортежи (namedtuple):
    
    - Monitoring с полями:
        percentage
            формат входного пакета: 47.23%, 12.05%, ...
            формат выходного пакета: 47.23, 12.05, ...
            тип данных для хранения: Decimal
    
    - Geodata с полями:
        latitude
            формат входного пакета: -147.9697263616:lat, 10.7559791616:lat, ...
            формат выходного пакета: -147.9697263616, 10.7559791616, ...
            тип данных для хранения: Decimal
        longitude
            формат входного пакета: 24.8753754112:lng, -1.3888262144:lng, ...
            формат выходного пакета: 24.8753754112, -1.3888262144, ...
            тип данных для хранения: Decimal
    
    - AppCodes с полями:
        status
            формат входного пакета: 700, 840, ...
            формат выходного пакета: 700, 840, ...
            тип данных для хранения: int
        message
            формат входного пакета: t, L, q, ...
            формат выходного пакета: t, L, q, ...
            тип данных для хранения: str
    
Самостоятельно продумайте структуру программы: сколько и каких в ней должно быть функций.
Постарайтесь написать оптимальный код. Используйте для этого все последние изученные возможности.



  =========================

Ответ для каждой задачи должен представлять собой отдельный файл с расширением .py

В самом файле находится код, решающий задачу.

В конец файла необходимо поместить закомментированную копию консольного вывода результата выполнения файла интерпретатором

Правила отправки ДЗ находятся в Teams файле Python/homework/ОБЯЗАТЕЛЬНО К ПРОЧТЕНИЮ.txt